
ICEMAN3D.Cube=function(){this.scene=null;this.camera=null;this.renderer=null;this.ambientLight=null;this.directionalLight=null;this.canvas=null;this.cameraMove=null;this.navigation=null;this.settings=null;this.drawLoop=null;this.enableDraw=null;this.controls=null;this.plane=null;this.planeSize=250;this.boxSize=5;this.objects=[];this.movedStatus=0;this.mouse=new THREE.Vector2();this.mouseStart={x:-1,y:-1};this.raycaster=new THREE.Raycaster();this.isShiftDown=false};ICEMAN3D.Cube.prototype.InitSettings=function(a){this.settings={cameraEyePosition:new ICEMAN3D.Coord(1,1,1),cameraCenterPosition:new ICEMAN3D.Coord(0,0,0),cameraUpVector:new ICEMAN3D.Coord(0,0,1),lightAmbientColor:[0.5,0.5,0.5],lightDiffuseColor:[0.5,0.5,0.5]};if(a!==undefined){if(a.cameraEyePosition!==undefined){this.settings.cameraEyePosition=ICEMAN3D.CoordFromArray(a.cameraEyePosition)}if(a.cameraCenterPosition!==undefined){this.settings.cameraCenterPosition=ICEMAN3D.CoordFromArray(a.cameraCenterPosition)}if(a.cameraUpVector!==undefined){this.settings.cameraUpVector=ICEMAN3D.CoordFromArray(a.cameraUpVector)}if(a.lightAmbientColor!==undefined){this.settings.lightAmbientColor=a.lightAmbientColor}if(a.lightDiffuseColor!==undefined){this.settings.lightDiffuseColor=a.lightDiffuseColor}}return true};ICEMAN3D.Cube.prototype.Start=function(a,e){if(!ICEMAN3D.IsWebGLEnabled()){return false}if(!this.InitSettings(e)){return false}if(!this.InitThree(a)){return false}if(!this.InitCamera(e)){return false}if(!this.InitLights()){return false}var g=new THREE.Color();var d=new THREE.Color();g.setHex("#e01515".replace("#","0x"));d.setHex("#cccccc".replace("#","0x"));this.addGeometry=new THREE.BoxGeometry(this.boxSize,this.boxSize,this.boxSize);var c=new THREE.MeshPhongMaterial({opacity:0.6,transparent:true,color:g.getHex(),specular:d.getHex(),shininess:0});this.rollOverMesh=new THREE.Mesh(this.addGeometry,c);this.scene.add(this.rollOverMesh);this.rollOverMesh.visible=false;this.size=this.planeSize/2;var b=this.boxSize;var j=new THREE.Geometry();for(var f=-this.size;f<=this.size;f+=b){j.vertices.push(new THREE.Vector3(-this.size,f,0));j.vertices.push(new THREE.Vector3(this.size,f,0));j.vertices.push(new THREE.Vector3(f,-this.size,0));j.vertices.push(new THREE.Vector3(f,this.size,0))}var h=new THREE.LineBasicMaterial({color:0,opacity:0.2,transparent:true});var l=new THREE.Line(j,h,THREE.LinePieces);this.scene.add(l);var j=new THREE.PlaneBufferGeometry(this.planeSize,this.planeSize);this.plane=new THREE.Mesh(j);this.plane.visible=false;this.scene.add(this.plane);this.objects.push(this.plane);var k=this;this.canvas.addEventListener("mousemove",function(i){k.DocumentMouseMove(i)},false);this.canvas.addEventListener("touchmove",function(i){k.DocumentMouseMove(i)},false);this.canvas.addEventListener("mousedown",function(i){k.DocumentMouseDown(i)},false);this.canvas.addEventListener("touchstart",function(i){k.DocumentMouseDown(i)},false);this.canvas.addEventListener("mouseup",function(i){k.DocumentMouseUp(i)},false);this.canvas.addEventListener("touchend",function(i){k.DocumentMouseUp(i)},false);this.canvas.addEventListener("mouseout",function(i){k.DocumentMouseOut(i)},false);this.canvas.addEventListener("mouseover",function(i){k.DocumentMouseOver(i)},false);document.addEventListener("keydown",function(i){k.DocumentKeyDown(i)},false);document.addEventListener("keyup",function(i){k.DocumentKeyUp(i)},false);this.drawLoop=false;this.enableDraw=true;this.DrawIfNeeded();return true};ICEMAN3D.Cube.prototype.InitThree=function(a){this.canvas=a;this.canvas.width=$("#container").width();this.canvas.height=$("body").height()-$("#main-nav").height();if(!this.canvas||!this.canvas.getContext){return false}this.scene=new THREE.Scene();if(!this.scene){return false}var b={canvas:this.canvas,antialias:true,preserveDrawingBuffer:true};this.renderer=new THREE.WebGLRenderer(b);if(!this.renderer){return false}this.renderer.setClearColor(new THREE.Color(16777215));this.renderer.setSize(this.canvas.width,this.canvas.height);return true};ICEMAN3D.Cube.prototype.InitCamera=function(a){this.cameraMove=new ICEMAN3D.Camera(ICEMAN3D.CoordFromArray(a.cameraEyePosition),ICEMAN3D.CoordFromArray(a.cameraCenterPosition),ICEMAN3D.CoordFromArray(a.cameraUpVector),a.fieldOfView,a.nearClippingPlane,a.farClippingPlane);if(!this.cameraMove){return false}this.navigation=new ICEMAN3D.Navigation();if(!this.navigation.Init(this.canvas,this.cameraMove,this.DrawIfNeeded.bind(this),this.Resize.bind(this))){return false}this.camera=new THREE.PerspectiveCamera(this.cameraMove.fieldOfView,this.canvas.width/this.canvas.height,this.cameraMove.nearClippingPlane,this.cameraMove.farClippingPlane);if(!this.camera){return false}this.scene.add(this.camera);return true};ICEMAN3D.Cube.prototype.InitLights=function(){var b=new THREE.Color();var c=new THREE.Color();b.setRGB(this.settings.lightAmbientColor[0],this.settings.lightAmbientColor[1],this.settings.lightAmbientColor[2]);c.setRGB(this.settings.lightDiffuseColor[0],this.settings.lightDiffuseColor[1],this.settings.lightDiffuseColor[2]);this.ambientLight=new THREE.AmbientLight(b.getHex());if(!this.ambientLight){return false}this.scene.add(this.ambientLight);this.directionalLight=new THREE.DirectionalLight(c.getHex());if(!this.directionalLight){return false}var a=new THREE.Vector3().subVectors(this.cameraMove.eye,this.cameraMove.center);this.directionalLight.position.set(a.x,a.y,a.z);this.scene.add(this.directionalLight);return true};ICEMAN3D.Cube.prototype.Resize=function(){this.camera.aspect=this.canvas.width/this.canvas.height;this.camera.updateProjectionMatrix();this.renderer.setSize(this.canvas.width,this.canvas.height);this.DrawIfNeeded()};ICEMAN3D.Cube.prototype.EnableDraw=function(a){this.enableDraw=a};ICEMAN3D.Cube.prototype.Draw=function(){if(!this.enableDraw){return}this.camera.position.set(this.cameraMove.eye.x,this.cameraMove.eye.y,this.cameraMove.eye.z);this.camera.up.set(this.cameraMove.up.x,this.cameraMove.up.y,this.cameraMove.up.z);this.camera.lookAt(new THREE.Vector3(this.cameraMove.center.x,this.cameraMove.center.y,this.cameraMove.center.z));var a=new THREE.Vector3().subVectors(this.cameraMove.eye,this.cameraMove.center);this.directionalLight.position.set(a.x,a.y,a.z);this.renderer.render(this.scene,this.camera);if(this.drawLoop){setStyle(this.Draw.bind(this))}};ICEMAN3D.Cube.prototype.DrawIfNeeded=function(){if(!this.drawLoop){this.Draw()}};ICEMAN3D.Cube.prototype.DocumentMouseMove=function(d){d.preventDefault();var e=cY=0;if(d.type=="touchmove"&&d.touches.length==1){e=d.touches[0].pageX;cY=d.touches[0].pageY}else{e=d.clientX;cY=d.clientY}if(this.movedStatus==1){if(Math.pow(this.mouseStart.x-e,2)+Math.pow(this.mouseStart.y-cY,2)>100){this.movedStatus=2}}if(d.type=="touchmove"&&d.touches.length==1){return}if(this.isShiftDown){for(var b in this.objects){if(this.objects[b].name=="meshCube"){this.objects[b].material.opacity=1}}}this.mouse.set(((d.clientX-$(this.canvas).offset().left)/this.canvas.width)*2-1,-((d.clientY-$(this.canvas).offset().top)/this.canvas.height)*2+1);this.raycaster.setFromCamera(this.mouse,this.camera);var c=this.raycaster.intersectObjects(this.objects);if(c.length>0){var a=c[0];if(this.isShiftDown){if(a.object.name=="meshCube"){a.object.material.opacity=0.6;a.object.material.transparent=true}}else{this.rollOverMesh.position.copy(a.point).add(a.face.normal);this.rollOverMesh.position.divideScalar(this.boxSize).floor().multiplyScalar(this.boxSize).addScalar(this.boxSize/2)}this.DrawIfNeeded()}};ICEMAN3D.Cube.prototype.DocumentMouseDown=function(a){this.movedStatus=1;if(a.type=="touchstart"&&a.touches.length==1){this.mouseStart.x=(a.touches[0].pageX);this.mouseStart.y=(a.touches[0].pageY)}else{this.mouseStart.x=(a.clientX);this.mouseStart.y=(a.clientY)}this.rollOverMesh.visible=false};ICEMAN3D.Cube.prototype.DocumentMouseUp=function(d){d.preventDefault();this.mouseStart.x=this.mouseStart.y=-1;if(d.type=="touchend"&&d.changedTouches.length==1){this.mouse.x=((d.changedTouches[0].pageX-$(this.canvas).offset().left)/this.canvas.width)*2-1;this.mouse.y=-((d.changedTouches[0].pageY-$(this.canvas).offset().top)/this.canvas.height)*2+1}else{this.rollOverMesh.visible=true;this.mouse.x=((d.clientX-$(this.canvas).offset().left)/this.canvas.width)*2-1;this.mouse.y=-((d.clientY-$(this.canvas).offset().top)/this.canvas.height)*2+1}if(this.movedStatus==2){this.movedStatus=0;return}this.movedStatus=0;this.raycaster.setFromCamera(this.mouse,this.camera);var c=this.raycaster.intersectObjects(this.objects);if(c.length>0){var b=c[0];if(this.isShiftDown||d.button===THREE.MOUSE.RIGHT||(this.isShiftDown&&d.type=="touchend"&&d.changedTouches.length==1)){if(b.object!=this.plane){this.scene.remove(b.object);this.objects.splice(this.objects.indexOf(b.object),1)}this.DrawIfNeeded()}else{if(d.button===THREE.MOUSE.LEFT||(d.type=="touchend"&&d.changedTouches.length==1)){var e=new THREE.Color();var f=new THREE.Color();e.setHex("#fec400".replace("#","0x"));f.setHex("#cccccc".replace("#","0x"));var a=new THREE.MeshPhongMaterial({color:this.rollOverMesh.material.color,specular:this.rollOverMesh.material.specular,shading:THREE.SmoothShading,shininess:0,side:THREE.DoubleSide});var g=new THREE.Mesh(this.addGeometry,a);g.position.copy(b.point).add(b.face.normal);g.position.divideScalar(this.boxSize).floor().multiplyScalar(this.boxSize).addScalar(this.boxSize/2);g.name="meshCube";this.scene.add(g);this.objects.push(g)}}this.DrawIfNeeded()}else{}};ICEMAN3D.Cube.prototype.DocumentMouseOut=function(a){this.rollOverMesh.visible=false;this.DrawIfNeeded()};ICEMAN3D.Cube.prototype.DocumentMouseOver=function(a){this.rollOverMesh.visible=true;this.DrawIfNeeded()};ICEMAN3D.Cube.prototype.DocumentKeyDown=function(a){switch(a.keyCode){case 16:this.isShiftDown=true;this.rollOverMesh.visible=false;this.DrawIfNeeded();break}};ICEMAN3D.Cube.prototype.DocumentKeyUp=function(a){switch(a.keyCode){case 16:this.isShiftDown=false;this.rollOverMesh.visible=true;this.DrawIfNeeded();break}};ICEMAN3D.Cube.prototype.ChangeColor=function(b){var a=/^#[0-9a-fA-F]{6}$/;if(a.test(b)){this.rollOverMesh.material.color.setHex(b.replace("#","0x"));this.DrawIfNeeded()}else{console.log("无效的颜色值")}};ICEMAN3D.Cube.prototype.VertexCount=function(){var a=0;this.scene.traverse(function(b){if(b instanceof THREE.Mesh&&b.name=="meshCube"){if(b.geometry instanceof THREE.Geometry){a=a+b.geometry.vertices.length}}});return a};